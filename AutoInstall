#!/usr/bin/env bash

# This is an auomated script to install archlinux minimal.
# Personal use.	

part_cero(){
	git config --global user.email 'daniel.mendoza@alumnos.udg.mx'
	git config --global user.name 'dannyMendoza'
	main
}

crypted(){
	# encrypt root partition
	cryptsetup luksFormat /dev/sda2
	cryptsetup open /dev/sda2 cryptlvm
	pvcreate /dev/mapper/cryptlvm
	vgcreate archlvm /dev/mapper/cryptlvm
	lvcreate -L 280G archlvm -n cryptroot_lvm
	lvcreate -L 8G archlvm -n cryptswap_lvm
	lvcreate -l 100%FREE archlvm -n crypthome_lvm
	mkfs.vfat -F32 /dev/sda1 -n "EFIBOOT"
	mkfs.ext4 /dev/archlvm/cryptroot_lvm -L "root_arch"
	mkfs.ext4 /dev/archlvm/crypthome_lvm -L "home_arch"
	mkswap /dev/archlvm/cryptswap_lvm -L "swap_arch"
	mount /dev/archlvm/cryptroot_lvm /mnt
	mkdir /mnt/{boot,home}
	mount /dev/sda1 /mnt/boot
	mount /dev/archlvm/crypthome_lvm /mnt/home
	swapon /dev/archlvm/cryptswap_lvm
}

not_crypted(){
	pvcreate /dev/sda2
	vgcreate archlvm /dev/sda2
	lvcreate -L 60G archlvm -n root_lvm
	lvcreate -L 2G archlvm -n swap_lvm
	lvcreate -l 100%FREE archlvm -n home_lvm
	mkfs.vfat -F32 /dev/sda1 -n "EFIBOOT"
	mkfs.ext4 /dev/archlvm/root_lvm -L "root_arch"
	mkfs.ext4 /dev/archlvm/home_lvm -L "home_arch"
	mkswap /dev/archlvm/swap_lvm -L "swap_arch"
	mount /dev/archlvm/root_lvm /mnt
	mkdir /mnt/{boot,home}
	mount /dev/sda1 /mnt/boot
	mount /dev/archlvm/home_lvm /mnt/home
	swapon /dev/archlvm/swap_lvm
}

part_one(){
	# Set latinamrican keyboard.
	loadkeys la-latin1
	## Check internet connection.
	internet=$(ping -c1 archlinux.org | grep -wo "1 packets")
	if [[ -n $internet ]] ; then
		clear
		echo -e "Internet connection working :)\n"
		sleep 0.5
	else
		echo -e "Internet conection does not work :(\n"
		wifi-menu
	fi
	# Update system clock
	timedatectl set-ntp true
	# Install a bigger font
	pacman -Sy terminus-font --noconfirm
	setfont ter-v32b
	## Sort servers rank for speed
	pacman -Sy pacman-mirrorlist --noconfirm
	pacman -Sy pacman-contrib --noconfirm
	rm -vf /etc/pacman.d/mirrorlist
	# Get the mirrorlist directly from the website.
	curl -o /etc/pacman.d/mirrorlist https://www.archlinux.org/mirrorlist/all/
	cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.back
	sed -i 's/^#Server/Server/' /etc/pacman.d/mirrorlist.back
	rankmirrors -n 5 /etc/pacman.d/mirrorlist.back > /etc/pacman.d/mirrorlist &
	pid=$!
	## Partioning
	parted --script /dev/sda \
		mklabel gpt \
		mkpart primary fat32 1MiB 513MiB \
		mkpart primary ext4 513MiB 100% \
		set 1 esp on \
		set 2 lvm on
	read -p "Do you want to crypt the partition [Yes|No]=? " partdevice
	while [[ ! "${partdevice}" =~ (Yes|No) ]] ; do
		clear
		read -p "Do you want to crypt the partition [Yes|No]=? " partdevice
	done
	[[ "${partdevice}" == "Yes" ]] && crypted
	[[ "${partdevice}" == "No" ]] && not_crypted
	wait $pid
	pacstrap /mnt base base-devel linux linux-firmware man-db man-pages
	genfstab -p -U /mnt >> /mnt/etc/fstab
	cp AutoInstall /mnt/home
	echo -e "\n\nCtrl+C if something was wrong" ; sleep 10
	arch-chroot /mnt
}

part_two(){
	# Time zone
	pacman -Sy lvm2 vim sed intel-ucode iw wpa_supplicant networkmanager dialog terminus-font git wget openssh zsh zsh-completions zsh-syntax-highlighting zsh-autosuggestions xf86-video-intel --noconfirm
	ln -sf /usr/share/zoneinfo/America/Mexico_city /etc/localtime
	hwclock --systohc
	sed -i 's/^#en_US/en_US/'  /etc/locale.gen
	sed -i 's/^#es_MX/es_MX/'  /etc/locale.gen
	locale-gen
	echo "LANG=en_US.UTF-8" > /etc/locale.conf
	echo -e  "KEYMAP=la-latin1\nFONT=ter-v24b" > /etc/vconsole.conf
	clear
	read -p "Ingresa el nombre del equipo: " hostNAME
	echo "$hostNAME" > /etc/hostname
	rm -f /etc/hosts
	echo -e "127.0.0.1\tlocalhost\n::1\t\tlocalhost\n127.0.1.1\t${hostNAME}.localdomain\t$hostNAME" > /etc/hosts
	clear
	echo "Enter the root password"
	passwd
	rm -f /boot/loader/loader.conf
	echo -e "default\tarch\ntimeout\t5" > /boot/loader/loader.conf

	is_crypted="$(blkid /dev/sda2 | grep -i crypto)"
	if [[ -n "${is_crypted}" ]] ; then
		grep -w "^HOOKS" /etc/mkinitcpio.conf | sed -i 's/block/block lvm2 encrypt' /etc/mkinitcpio.conf
		mkinitcpio -p linux
		bootctl install
		uuid=$(blkid | grep /dev/sda2 | awk {'print $2'} | sed -e 's/"//g')
		echo -e "title GNU/Linux Arch linux D@nNix\nlinux /vmlinuz-linux\ninitrd /intel-ucode.img\ninitrd /initramfs-linux.img\noptions cryptdevice=${uuid}:cryptlvm root=/dev/archlvm/cryptroot_lvm rw" > /boot/loader/entries/arch.conf
	else
		grep -w "^HOOKS" /etc/mkinitcpio.conf | sed -i 's/block/block lvm2' /etc/mkinitcpio.conf
		mkinitcpio -p linux
		bootctl install
		uuid=$(blkid | grep /dev/mapper/archlvm-root_lvm | awk {'print $3'} | sed -e 's/"//g')
		echo -e "title GNU/Linux Arch linux *Mendoza*\nlinux /vmlinuz-linux\ninitrd /intel-ucode.img\ninitrd /initramfs-linux.img\noptions root=${uuid} rw" > /boot/loader/entries/arch.conf
	fi

	read -p "Add User name: " username 
	read -p "Type shell to use (bash or zsh): " shellselected 
	while [[ ! "${shellselected}" =~ (bash|zsh) ]]; do
		read -p "shell must be (bash or zsh): " shellselected 
	done
	useradd -m -G adm,ftp,games,http,log,rfkill,sys,systemd-journal,uucp,wheel,dbus,kmem,lp,mail,proc,root,tty,utmp,disk,floppy,input,kvm,optical,scanner,storage,video,network,power,uuidd,users -s /bin/"${shellselected}" "${username}"
	echo "Enter the ${username} password"
	passwd "${username}"
	sudo sed -i "$(sed -n '/^# %wheel/ =' /etc/sudoers | tail -n 1)"' s/^# %wheel/%wheel/' /etc/sudoers
}

part_three(){
	username="$(whoami)"
	sudo sed -i 's/^#\[\multilib\]/\[multilib\]/' /etc/pacman.conf
	sudo sed -i "$(sed -n '/^#Include/ =' /etc/pacman.conf | tail -n 1)"' s/^#Include/Include/' /etc/pacman.conf
	sudo pacman -Syyu bspwm sxhkd xorg xorg-apps xorg-xinit xdg-user-dirs\
		alsa alsa-{firmware,lib,oss,plugins,tools,topology-conf,ucm-conf,utils}\
		terminus-{font,font-otb} numlockx libinput xterm urxvt-perls rxvt-{unicode,unicode-terminfo}\
		git wget curl chromium  ntfs-3g mlocate ttf-bitstream-vera font-bh-ttf ttf-croscore\
		ttf-dejavu ttf-droid ttf-roboto noto-fonts ttf-liberation ttf-ibm-plex ttf-ubuntu-font-family\
		ttf-cascadia-code ttf-fantasque-sans-mono otf-fantasque-sans-mono\
		ttf-fira-mono otf-fira-mono ttf-fira-code gnu-free-fonts ttf-hack\
		inter-font ttf-linux-libertine ttf-linux-libertine\
		xorg-fonts-type1 noto-fonts-emoji ttf-joypixels font-mathematica texlive-core\
		texlive-fontsextra otf-latin-modern otf-latinmodern-math lxappearance flashplugin\
		pepper-flash lib32-mesa --noconfirm
	sudo updatedb
	amixer sset Master unmute
	amixer sset Speaker unmute
	amixer sset Headphone unmute
	echo "defaults.pcm.rate_converter \"speexrate_medium\"" > ~/.asoundrc
	cp ~/AutoInstall ~/.Autoinstall
	xdg-user-dirs-update
	rm -rvf /home/"${username}"/.config/user-dirs.dirs ; sleep 2
	rm -rvf /home/"${username}"/*
	mkdir -p /home/"${username}"/{DATA,DESK,DOWN,MOVS,PICS,PUBL,TEMP,MUSC}
	echo -e "XDG_DESKTOP_DIR=\"$HOME/DESK\"\
		\nXDG_DOWNLOAD_DIR=\"$HOME/DOWN\"\
		\nXDG_TEMPLATES_DIR=\"$HOME/TEMP\"\
		\nXDG_PUBLICSHARE_DIR=\"$HOME/PUBL\"\
		\nXDG_DOCUMENTS_DIR=\"$HOME/DATA\"\
		\nXDG_MUSIC_DIR=\"$HOME/MUSC\"\
		\nXDG_PICTURES_DIR=\"$HOME/PICS\"\
		\nXDG_VIDEOS_DIR=\"$HOME/MOVS\"" >> /home/"${username}"/.config/user-dirs.dirs
	xdg-user-dirs-update
	mkdir -p /home/"${username}"/.config/{bspwm,sxhkd}
	cp -v /usr/share/doc/bspwm/examples/bspwmrc /home/"${username}"/.config/bspwm/
	cp -v /usr/share/doc/bspwm/examples/sxhkdrc /home/"${username}"/.config/sxhkd/
	cat /home/"${username}"/.config/sxhkd/sxhkdrc
	sed -i 's/urxvt/xterm -bg white -fg black -fn "-xos4-terminus-bold-r-normal--32-320-72-72-c-160-iso10646-1" -bd black -cr white/' /home/"${username}"/.config/sxhkd/sxhkdrc
	chmod +x /home/"${username}"/.config/bspwm/bspwmrc
	cp -v /etc/X11/xinit/xinitrc /home/"${username}"/.xinitrc
	sed -i '/^$/d' /home/"${username}"/.xinitrc
	sed -i '/^twm/,$d' /home/"${username}"/.xinitrc
	sudo sed -i 's/^#HandleLid/HandleLid/g' /etc/systemd/logind.conf
	echo "exec bspwm 2>&1" >> /home/"${username}"/.xinitrc
	cd $HOME/DOWN && git clone https://aur.archlinux.org/yay.git
	cd $HOME/DOWN/yay && makepkg -si --noconfirm
	rm -rfv $HOME/DOWN/yay
	yay -Syu --devel --timeupdate --noconfirm
	yay -S ttf-google-fonts-git spotify --noconfirm
	cd $HOME/.config/ && git clone https://git.suckless.org/dmenu
	cd $HOME/.config/dmenu/ && make && sudo make install clean
	echo -e "Section \"InputClass\"\
		\n\tIdentifier \"libinput touchpad catchall\"\
        \n\tMatchIsTouchpad \"on\"\
        \n\tMatchDevicePath \"/dev/input/event*\"\
        \n\tOption \"Tapping\" \"on\"\
        \n\tOption \"ClickMethod\" \"clickfinger\"\
        \n\tOption \"DisableWhileTyping\" \"on\"\
        \n\tOption \"TappingButtonMap\" \"lrm\"\
        \n\tOption \"NaturalScrolling\" \"on\"\
        \n\tDriver \"libinput\"\
        \nEndSection" > $HOME/30-touchpad.conf
	sudo mv $HOME/30-touchpad.conf /etc/X11/xorg.conf.d/
	cp ~/.Autoinstall ~/Autoinstall
}

quit(){
	clear
	exit 0
}

main(){
	clear
	echo -e "GNU/Linux ARCHLINUX Installation\
		\n\n\t0) GIT personal config\
		\n\t1) Partitioning and init setup\
		\n\t2) Adding a root and user to new sys [arch-root]\
		\n\t3) Installing X system and some other apps [Do not run as root user]\
		\n\t4) Quit\n"
	read -p "Choose an option: " opt
	case $opt in
		0)	part_cero  ;;
		1)	part_one  ;;
		2)	part_two  ;;
		3)	part_three ;;
		4)	quit ;;
		*) 	echo "Option incorrect :("; sleep 2 && main ;;
	esac
}

main
